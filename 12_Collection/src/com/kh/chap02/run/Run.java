package com.kh.chap02.run;

public class Run {

	public static void main(String[] args) {
		/*
		 * - 추상적이란?
		 * 		- 실체가 존재하지 않는다
		 * 			(ex , 추상 메소드 바디가 존재하지 않는다.
		 * 				  추상 클래스는 객체가 존재하지 않는다.)
		 * 
		 * - 자바에서 Interface 를 실체화(구현) 하려면?
		 * 		- Interface 구현하는 Class(클래스)가 필요하다.
		 * ==================================================
		 * 자바의 컬렉션(Collection Framework)
		 * --------------------------------------------------
		 * Abstract Data Type (ADT : 추상적 자료형) ==> Interface
		 * +
		 * 구현체 => Class
		 * +
		 * 알고리즘 => method
		 * --------------------------------------------------
		 * 
		 * 배열과 컬렉션의 차이점
		 * 
		 * - 배열의 아주 쬐에끔 불편한 점은?
		 * 		1. 배열을 사용하려고 할 때 꼭 크기를 할당을 해야함 => 한 번 지정된 크기는 변경이 불가능
		 * 		2. 배열 중간 위치에 새로운 요소를 추가하거나 삭제할 때 기존값을 밀어주거나 땡기는 코드를 써야함
		 * 
		 * - 컬렉션을 사용하는 이유는?
		 * 		1. 크기의 제약이 없음 
		 * 			=> 처음 컬렉션을 사용할 떄 크기를 지정하지 않더라도 사용할 수 있음
		 * 			=> 만약 요소가 추가되면서 크기를 넘어서는 상황이 발생하면 알아서 확장됨
		 * 		2. 중간에 값을 추가하거나 삭제하거나 경우 기존값을 밀어주거나 땡겨주는 로직이 이미 구현되어 있음
		 * 			=> 그때그때 필요한 메소드들을 호출해서 사용하면 됨
		 * 
		 * - 중립
		 * 		- 배열 : 하나의 타입의 자료형만 사용할 수 있음
		 * 		- 컬렉션 : 여러 타입의 데이터들을 관리할 수 있음 : 같은 타입의 데이터만 묶어서 사용가능
		 * 	
		 * - 용도
		 * 		- 배열 : 사용할 데이터의 개수가 명확히 정해져있고, 조회의 목적이 있을 경우
		 * 		- 컬렉션 : 데이터들의 추가, 수정, 삭제가 많이 일어날 경우
		 * 
		 * --------------------------------------------------
		 * 개념적인 컬렉션의 종류
		 * 
		 * List 추상적 자료형의 개념
		 * 		- List 계열 : 다루고자 하는 값(Value)만 저장 / 저장 시 순서 유지(Index), 중복값 허용
		 * 					=> LinkedList[근본], ArrayList[v], Vector(좀 옛날거임)  는 구현이 되어있음
		 * 					=> ArrayList 배울 것!
		 * 
		 */
	}

}
